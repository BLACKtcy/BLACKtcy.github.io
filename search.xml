<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTML+CSS 元素水平垂直居中的几种方法</title>
    <url>/2020/10/11/%E5%85%83%E7%B4%A0%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/</url>
    <content><![CDATA[<h2 id="介绍几种常用的-html-元素水平垂直居中的方法"><a href="#介绍几种常用的-html-元素水平垂直居中的方法" class="headerlink" title="介绍几种常用的 html 元素水平垂直居中的方法"></a><em>介绍几种常用的 html 元素水平垂直居中的方法</em></h2><h2 id="一、-使用弹性布局"><a href="#一、-使用弹性布局" class="headerlink" title="一、 使用弹性布局"></a>一、 使用弹性布局</h2><p>给需要居中的元素的父元素设置 display:flex；然后设置对齐方式为 center，需要注意的是父元素要设置高度，具体代码如下：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style<span class="token operator">></span>
     body <span class="token punctuation">&#123;</span>
       display<span class="token operator">:</span> flex<span class="token punctuation">;</span>
       justify<span class="token operator">-</span>content<span class="token operator">:</span> center<span class="token punctuation">;</span>
       align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>
       height<span class="token operator">:</span> <span class="token number">1000</span>px<span class="token punctuation">;</span>
     <span class="token punctuation">&#125;</span>
     #box <span class="token punctuation">&#123;</span>
       height<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>
       width<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>
       background<span class="token operator">-</span>color<span class="token operator">:</span> skyblue<span class="token punctuation">;</span>
     <span class="token punctuation">&#125;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>
 <span class="token operator">&lt;</span>body<span class="token operator">></span>
   <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
 <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="二、-使用绝对定位"><a href="#二、-使用绝对定位" class="headerlink" title="二、 使用绝对定位"></a>二、 使用绝对定位</h2><p>给需要居中的元素添加 position:absolute；属性设置四周距离为 0，margin:auto; 代码如下：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style<span class="token operator">></span>
      #box <span class="token punctuation">&#123;</span>
        height<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>
        width<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>
        background<span class="token operator">-</span>color<span class="token operator">:</span> skyblue<span class="token punctuation">;</span>
        position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>
        left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        right<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        top<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        bottom<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        margin<span class="token operator">:</span> auto<span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>
 <span class="token operator">&lt;</span>body<span class="token operator">></span>
    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="三、使用-CSS-2D-转换的-translate"><a href="#三、使用-CSS-2D-转换的-translate" class="headerlink" title="三、使用 CSS 2D 转换的 translate"></a>三、使用 CSS 2D 转换的 translate</h2><p>首先设置需要居中的元素的定位为 absolute 然后设置 left:50%;top50%;<br>再设置位移自身的-50%，代码如下：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token operator">&lt;</span>style<span class="token operator">></span>
      #box <span class="token punctuation">&#123;</span>
        height<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>
        width<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>
        background<span class="token operator">-</span>color<span class="token operator">:</span> skyblue<span class="token punctuation">;</span>
        position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>
        top<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>
        left<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>
        transform<span class="token operator">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>
<span class="token operator">&lt;</span>body<span class="token operator">></span>
    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
  </entry>
  <entry>
    <title>微信小程序封装request请求</title>
    <url>/2020/10/11/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B0%81%E8%A3%85request/</url>
    <content><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/**
 * 封装网络请求为promise对象
 * @param &#123;*&#125; url
 * @param &#123;*&#125; data
 * @param &#123;*&#125; method
 */</span>
<span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">"GET"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reslove<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      url<span class="token punctuation">,</span>
      data<span class="token punctuation">,</span>
      method<span class="token punctuation">,</span>
      success<span class="token operator">:</span> reslove<span class="token punctuation">,</span>
      fail<span class="token operator">:</span> reject<span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  request<span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
  </entry>
  <entry>
    <title>CSS | 简单实用的鼠标滑过样式</title>
    <url>/2019/02/04/CSS-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%94%A8%E7%9A%84%E9%BC%A0%E6%A0%87%E6%BB%91%E8%BF%87%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="简单实用又不花里胡哨的鼠标滑过样式"><a href="#简单实用又不花里胡哨的鼠标滑过样式" class="headerlink" title="简单实用又不花里胡哨的鼠标滑过样式"></a>简单实用又不花里胡哨的鼠标滑过样式</h1><blockquote>
<p>今天和大家分享我在网站里面常用到的鼠标滑过div的样式。喜欢的话记得给我点赞。</p>
</blockquote>
<h2 id="一、纯图片的DIV"><a href="#一、纯图片的DIV" class="headerlink" title="一、纯图片的DIV"></a>一、纯图片的DIV</h2><p><strong>html代码**</strong>（以下效果皆围绕这个代码展开）**<strong>：</strong></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class&#x3D;&quot;lists&quot;&gt;
    &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;box&quot;&gt;
        &lt;img src&#x3D;&quot;avatar.jpg&quot;&gt;
    &lt;&#x2F;a&gt;
    &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;box&quot;&gt;
        &lt;img src&#x3D;&quot;avatar.jpg&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="1、缓动上移"><a href="#1、缓动上移" class="headerlink" title="1、缓动上移"></a>1、缓动上移</h3><p>效果图：</p>
<p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/33d048db763e4fd39ae10910e35d14b9~tplv-k3u1fbpfcp-zoom-1.image" alt="img">  </p>
<pre class="line-numbers language-none"><code class="language-none">.lists&#123;
    display: flex;
    margin-top: 100px;
    justify-content: center;
&#125;
.box&#123;
    width: 200px;
    height: 200px;
    transition: all 0.3s;
&#125;
.box~.box&#123;
    margin-left: 15px;
&#125;
.box img&#123;width: 100%;height: 100%;&#125;
.box:hover&#123;
    transform: translateY(-6px);
&#125;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2、放大效果"><a href="#2、放大效果" class="headerlink" title="2、放大效果"></a>2、放大效果</h3><p>效果图：<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/69943fa2a0784e7b89584e1d92fe2cea~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>
<pre class="line-numbers language-none"><code class="language-none">.lists&#123;
    display: flex;
    margin-top: 100px;
    justify-content: center;
&#125;
.box&#123;
    width: 200px;
    height: 200px;
    transition: all 0.3s;
&#125;
.box~.box&#123;
    margin-left: 15px;
&#125;
.box img&#123;width: 100%;height: 100%;&#125;
.box:hover&#123;
    transform: scale(1.03);
&#125;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3、框内放大效果"><a href="#3、框内放大效果" class="headerlink" title="3、框内放大效果"></a>3、框内放大效果</h3><p>效果图：<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/22a262d0518342c7acbc6e3dc9eaaf8c~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>
<pre class="line-numbers language-none"><code class="language-none">.lists&#123;
    display: flex;
    margin-top: 100px;
    justify-content: center;
&#125;
.box&#123;
    width: 200px;
    height: 200px;
    overflow:hidden;
&#125;
.box~.box&#123;
    margin-left: 15px;
&#125;
.box img&#123;
    width: 100%;
    height: 100%;
    transition: all 0.5s;
&#125;
.box:hover img&#123;
    transform: scale(1.1);
&#125;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="4、蒙层效果"><a href="#4、蒙层效果" class="headerlink" title="4、蒙层效果"></a>4、蒙层效果</h3><p>效果图：<img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1faef47033ac4a449ad14d037e5988f8~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>
<pre class="line-numbers language-none"><code class="language-none">.lists&#123;
    display: flex;
    margin-top: 100px;
    justify-content: center;
&#125;
.box&#123;
    width: 200px;
    height: 200px;
    overflow:hidden;
    background-color: #4f4f4f;
&#125;
.box~.box&#123;
    margin-left: 15px;
&#125;
.box img&#123;
    width: 100%;
    height: 100%;
    transition: all 0.5s;
&#125;
.box:hover img&#123;
    opacity: 0.8
&#125;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="二、上图下文的DIV"><a href="#二、上图下文的DIV" class="headerlink" title="二、上图下文的DIV"></a>二、上图下文的DIV</h2><p><strong>不建议将整个div放大，会导致文字模糊抖动。上移的幅度也不要太大，否则会出现同样的效果。</strong></p>
<p><strong>html代码：（以下效果皆围绕这个代码展开）</strong></p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class&#x3D;&quot;lists&quot;&gt;
    &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;item&quot;&gt;
        &lt;div class&#x3D;&quot;item_pic&quot;&gt;
            &lt;img src&#x3D;&quot;avatar.jpg&quot;&gt;
        &lt;&#x2F;div&gt;
        &lt;div class&#x3D;&quot;item_content&quot;&gt;
            &lt;div class&#x3D;&quot;title&quot;&gt;Kitty的标题标题&lt;&#x2F;div&gt;
            &lt;div class&#x3D;&quot;content&quot;&gt;这是内容&lt;&#x2F;div&gt;
        &lt;&#x2F;div&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="1、框内放大图片-阴影"><a href="#1、框内放大图片-阴影" class="headerlink" title="1、框内放大图片+阴影"></a>1、框内放大图片+阴影</h3><p>效果图：<img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/524b79fdbea3428295d79eb6f745cb1d~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>
<pre class="line-numbers language-none"><code class="language-none">.lists&#123;
    display: flex;
    margin-top: 100px;
    justify-content: center;
&#125;
.item&#123;
    width: 200px;
    color: #333;
    text-decoration: none;
    border: 1px solid #eee;
    transition: all 0.5s;
&#125;
.item .item_pic&#123;
    width: 200px;
    height: 200px;
    overflow: hidden;
&#125;
.item .item_pic img&#123;
    width: 100%;
    height: 100%;
    transition: all 0.5s;
&#125;
.item:hover .item_pic img&#123;
    transform: scale(1.1);
&#125;
.item:hover&#123;
    box-shadow: 0 0 15px rgba(0,0,0,0.2);
&#125;
.item_content&#123;
    padding: 20px 10px;
&#125;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2、缓动上滑-阴影"><a href="#2、缓动上滑-阴影" class="headerlink" title="2、缓动上滑+阴影"></a>2、缓动上滑+阴影</h3><p>这个样式很典型，比如花瓣网、掘金的活动栏目。</p>
<p>当div上移的时候，还是可以很清楚的看到字体模糊了，可以把字体缩小点，上移的幅度设置成一个像素。    </p>
<p>效果图：<img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b06f9873f51e403fbb61e04b81cd88dc~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>
<pre class="line-numbers language-none"><code class="language-none">.lists&#123;
    display: flex;
    margin-top: 100px;
    justify-content: center;
&#125;
.item&#123;
    width: 200px;
    color: #333;
    text-decoration: none;
    border: 1px solid #eee;
    transition: all 0.5s;
    margin-right: 20px;
&#125;
.item .item_pic&#123;
    width: 200px;
    height: 200px;
    overflow: hidden;
&#125;
.item .item_pic img&#123;
    width: 100%;
    height: 100%;
    transition: all 0.5s;
&#125;
.item:hover&#123;
    &#x2F;*-1或者-2最佳*&#x2F;
    transform: translateY(-1px);  
    box-shadow: 0 0 15px rgba(0,0,0,0.3);
&#125;
.item_content&#123;
    padding: 20px 10px;
&#125;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3、蒙层效果-文字变色-边框"><a href="#3、蒙层效果-文字变色-边框" class="headerlink" title="3、蒙层效果+文字变色+边框"></a>3、蒙层效果+文字变色+边框</h3><p>效果图：<img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c8987e32bdba4c03a96e944003b642cb~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>
<pre class="line-numbers language-none"><code class="language-none">.lists&#123;
    display: flex;
    margin-top: 100px;
    justify-content: center;
&#125;
.item&#123;
    width: 200px;
    color: #333;
    text-decoration: none;
    border: 1px solid #eee;
    margin-right: 20px;
    transition: all 0.5s;
&#125;
.item .item_pic&#123;
    width: 200px;
    height: 200px;
    overflow: hidden;
    background-color: #4f4f4f;
&#125;
.item .item_pic img&#123;
    width: 100%;
    height: 100%;
    transition: all 0.5s;
&#125;
.item:hover&#123;
    border: 1px solid green;
&#125;
.item:hover .item_pic img&#123;
    opacity: 0.8;
&#125;
.item:hover .item_content&#123;
    color: green;
&#125;
.item_content&#123;
    padding: 20px 10px;
    transition: all 0.5s;
&#125;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="三、文字覆盖图片DIV"><a href="#三、文字覆盖图片DIV" class="headerlink" title="三、文字覆盖图片DIV"></a>三、文字覆盖图片DIV</h2><h3 id="1、滤镜滑动门效果"><a href="#1、滤镜滑动门效果" class="headerlink" title="1、滤镜滑动门效果"></a>1、滤镜滑动门效果</h3><p>效果图：</p>
<p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79a262c8461c4ad5939580a9e3299c4d~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>
<p>html代码：</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class&#x3D;&quot;box&quot;&gt;
    &lt;img src&#x3D;&quot;avatar.jpg&quot; alt&#x3D;&quot;Kitty的头像&quot; &#x2F;&gt;
    &lt;div class&#x3D;&quot;box2&quot;&gt;
        &lt;h3&gt;Kitty的头像&lt;&#x2F;h3&gt;                
        &lt;p&gt;Kitty的名字&lt;&#x2F;p&gt;
    &lt;&#x2F;div&gt;            
&lt;&#x2F;div&gt;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>css代码：</p>
<pre class="line-numbers language-none"><code class="language-none">.box &#123;
    position:relative;
    z-index:1;
    display:inline-block;
    overflow:hidden;
    background:#3085a3;
    text-align:center;
    cursor:pointer
&#125;
.box img &#123;
    width:200px;
    height:200px;
    opacity:1;
    transition:opacity .35s,transform .35s;
    float:left;
&#125;
.box:hover img &#123;
    opacity:.5;
&#125;
.box h3 &#123;
    margin-top:20%;
    transition:transform .35s;
    transform:translate3d(0,20px,0);
    opacity:0;
    color:#fff;
    font-size:16px;
&#125;
.box p &#123;
    margin:10px 0 0;
    padding:15px;
    border:1px solid #fff;
    opacity:0;
    transition:opacity .35s,transform .35s;
    transform:translate3d(0,20px,0) scale(1.1);
    color:#FFF;
&#125;
.box:hover h3 &#123;
    transform:translate3d(0,0,0);
    opacity:1;
&#125;
.box:hover p &#123;
    opacity:1;
    transform:translate3d(0,0,0) scale(1);
&#125;
.box2 &#123;
    width:200px;
    height:200px;
    padding:15px;
    position:absolute;
    box-sizing: border-box;
&#125;   
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="2、文字滑动进入"><a href="#2、文字滑动进入" class="headerlink" title="2、文字滑动进入"></a>2、文字滑动进入</h3><p>效果图：<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/11780e3a40a649e7a192939291470127~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p>
<p>html代码：</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class&#x3D;&quot;lists&quot;&gt;
    &lt;div class&#x3D;&quot;item&quot;&gt;
        &lt;div class&#x3D;&quot;text&quot;&gt;
          &lt;h1&gt;标题名称&lt;&#x2F;h1&gt;
          &lt;img src&#x3D;&quot;avatar.jpg&quot;&gt;
          &lt;h2 class&#x3D;&quot;animate-text&quot;&gt;Kitty 的测试案例&lt;&#x2F;h2&gt;
          &lt;p class&#x3D;&quot;animate-text&quot;&gt;这里放内容简介，内容简介,这里放内容简介，内容简介,这里放内容简介，内容简介&lt;&#x2F;p&gt;
          &lt;div class&#x3D;&quot;dots&quot;&gt; &lt;span&gt;&lt;&#x2F;span&gt; &lt;span&gt;&lt;&#x2F;span&gt; &lt;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;div&gt;
        &lt;&#x2F;div&gt;
    &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>css代码：</p>
<pre class="line-numbers language-none"><code class="language-none">* &#123; margin: 0; padding: 0;&#125;
.lists&#123;
    width: 100%;
    display: flex;
    justify-content: center;
    margin-top: 100px;
&#125;
.item &#123;
    width: 300px;
    height: 300px;
    background-color: #99aeff;
    position: relative;
    cursor: pointer;
    transition: all 0.4s ease-out;
    box-shadow: 0px 35px 77px -17px rgba(0, 0, 0, 0.44);
    overflow: hidden;
    color: #fff;
&#125;
.item img &#123;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 0;
    transition: all 0.4s ease-out;
&#125;
.item .text &#123;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    z-index: 99;
    position: absolute;
    padding: 30px;
&#125;
.item h1 &#123;
    text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.3);
&#125;
.item h2 &#123;
    margin-top: 20px;
    font-style: italic;
    transform: translateX(200px);
&#125;
.item p &#123;
    margin-top: 20px;
    line-height: 25px;
    transform: translateX(-200px);
    transition-delay: 0.2s;
&#125;
.animate-text &#123;
    opacity: 0;
    transition: all 0.6s ease-in-out;
&#125;
.item:hover &#123;
    box-shadow: 0px 35px 77px -17px rgba(0, 0, 0, 0.64);
    transform: scale(1.05);
&#125;
.item:hover img &#123;
    opacity: 0.2;
&#125;
.item:hover .animate-text &#123;
    transform: translateX(0);
    opacity: 1;
&#125;
.dots &#123;
    position: absolute;
    bottom: 20px;
    right: 30px;
    margin: 0 auto;
    width: 30px;
    height: 30px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
&#125;
.dots span &#123;
    width: 5px;
    height: 5px;
    background-color: #fff;
    border-radius: 50%;
    display: block;
    opacity: 0;
    transition: transform 0.4s ease-out, opacity 0.5s ease;
    transform: translateY(30px);
&#125;
.item:hover span &#123;
    opacity: 1;
    transform: translateY(0px);
&#125;
.dots span:nth-child(1) &#123;
    transition-delay: 0.05s;
&#125;
.dots span:nth-child(2) &#123;
    transition-delay: 0.1s;
&#125;
.dots span:nth-child(3) &#123;
    transition-delay: 0.15s;
&#125;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3、按钮滑动进入"><a href="#3、按钮滑动进入" class="headerlink" title="3、按钮滑动进入"></a>3、按钮滑动进入</h3><p>效果图：</p>
<p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a374ce72d42f44959ade35751b825737~tplv-k3u1fbpfcp-zoom-1.image" alt="img">html代码：</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div class&#x3D;&quot;item&quot;&gt;
    &lt;img src&#x3D;&quot;avatar.jpg&quot; alt&#x3D;&quot;&quot; &#x2F;&gt;
    &lt;div class&#x3D;&quot;btns&quot;&gt;
        &lt;div class&#x3D;&quot;follow&quot;&gt;关注&lt;&#x2F;div&gt;
        &lt;div class&#x3D;&quot;love&quot;&gt;点赞&lt;&#x2F;div&gt;
    &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>css代码：</p>
<pre class="line-numbers language-none"><code class="language-none">.item&#123;
    width: 300px;
    height: 300px;
    margin: 100px auto;
    cursor: pointer;
    position: relative;
&#125;
.item img&#123;
    width: 100%;
    height: 100%;
    background-color: #4f4f4f;
    position: relative;
    z-index: 2;
&#125;
.item:hover .btns&#123;
    z-index: 3;
&#125;
.item .btns&#123;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    background-color: rgba(0,0,0,0.3);
    transition: all 0.6s;
&#125;
.follow,.love&#123;
    width: 100px;
    height: 30px;
    line-height: 30px;
    text-align: center;
    border-radius: 4px;
    transition: all 0.3s;
    font-size: 14px;
    opacity: 0;
    background-color: #fff;
    color: #999;
&#125;
.item:hover .follow&#123;
    transform: translateY(80px);
    opacity: 1;
&#125;
.item:hover .love&#123;
    transform: translateY(-80px);
    opacity: 1;
&#125;
.follow&#123;
    position: absolute;
    left: calc(50% - 50px);
    top: -30px;
&#125;
.love&#123;
    position: absolute;
    bottom: -30px;
    left: calc(50% - 50px);
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>GIT 版本冲突</title>
    <url>/2018/09/30/GIT-%E7%89%88%E6%9C%AC%E5%86%B2%E7%AA%81/</url>
    <content><![CDATA[<h2 id="fatal-refusing-to-merge-unrelated-histories解决"><a href="#fatal-refusing-to-merge-unrelated-histories解决" class="headerlink" title="fatal: refusing to merge unrelated histories解决"></a>fatal: refusing to merge unrelated histories解决</h2><p>今天本地创建了一个仓库（有README)，把本地仓库和Github上关联以后，发现git pull，git feach提醒fatal: refusing to merge unrelated histories</p>
<p><img src="https://img-blog.csdnimg.cn/20190830090402218.png" alt="截图示例"></p>
<p>上网查到原因是两个分支是两个不同的版本，具有不同的提交历史</p>
<p>加一句</p>
<pre class="line-numbers language-none"><code class="language-none">$ git pull origin master --allow-unrelated-histories<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>


]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 基本操作</title>
    <url>/2018/10/29/Hexo-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="Hexo-基本操作"><a href="#Hexo-基本操作" class="headerlink" title="Hexo 基本操作"></a>Hexo 基本操作</h2><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><p>你可以执行下列命令来创建一篇新文章或者新的页面</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo new [layout] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p>
<h4 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h4><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建者三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p>
<table>
<thead>
<tr>
<th align="left">布局</th>
<th align="left">路径</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>post</code></td>
<td align="left"><code>source/_posts</code></td>
</tr>
<tr>
<td align="left"><code>page</code></td>
<td align="left"><code>source</code></td>
</tr>
<tr>
<td align="left"><code>draft</code></td>
<td align="left"><code>source/_drafts</code></td>
</tr>
</tbody></table>
<h4 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h4><p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>:title</code></td>
<td align="left">标题（小写，空格将会被替换为短杠）</td>
</tr>
<tr>
<td align="left"><code>:year</code></td>
<td align="left">建立的年份，比如， <code>2015</code></td>
</tr>
<tr>
<td align="left"><code>:month</code></td>
<td align="left">建立的月份（有前导零），比如， <code>04</code></td>
</tr>
<tr>
<td align="left"><code>:i_month</code></td>
<td align="left">建立的月份（无前导零），比如， <code>4</code></td>
</tr>
<tr>
<td align="left"><code>:day</code></td>
<td align="left">建立的日期（有前导零），比如， <code>07</code></td>
</tr>
<tr>
<td align="left"><code>:i_day</code></td>
<td align="left">建立的日期（无前导零），比如， <code>7</code></td>
</tr>
</tbody></table>
<h4 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h4><p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo publish [layout] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p>
<h4 id="模版（Scaffold）"><a href="#模版（Scaffold）" class="headerlink" title="模版（Scaffold）"></a>模版（Scaffold）</h4><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo new photo &quot;My Gallery&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>layout</code></td>
<td align="left">布局</td>
</tr>
<tr>
<td align="left"><code>title</code></td>
<td align="left">标题</td>
</tr>
<tr>
<td align="left"><code>date</code></td>
<td align="left">文件建立日期</td>
</tr>
</tbody></table>
<h4 id="支持的格式"><a href="#支持的格式" class="headerlink" title="支持的格式"></a>支持的格式</h4><p>Hexo 支持以任何格式书写文章，只要安装了相应的渲染插件。</p>
<p>例如，Hexo 默认安装了 <code>hexo-renderer-marked</code> 和 <code>hexo-renderer-ejs</code>，因此你不仅可以用 Markdown 写作，你还可以用 EJS 写作。如果你安装了 <code>hexo-renderer-pug</code>，你甚至可以用 Pug 模板语言书写文章。</p>
<p>只需要将文章的扩展名从 <code>md</code> 改成 <code>ejs</code>，Hexo 就会使用 <code>hexo-renderer-ejs</code> 渲染这个文件，其他格式同理。</p>
<h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p>
<pre class="line-numbers language-none"><code class="language-none">---title: Hello Worlddate: 2013&#x2F;7&#x2F;13 20:46:25---<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>layout</code></td>
<td align="left">布局</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>title</code></td>
<td align="left">标题</td>
<td align="left">文章的文件名</td>
</tr>
<tr>
<td align="left"><code>date</code></td>
<td align="left">建立日期</td>
<td align="left">文件建立日期</td>
</tr>
<tr>
<td align="left"><code>updated</code></td>
<td align="left">更新日期</td>
<td align="left">文件更新日期</td>
</tr>
<tr>
<td align="left"><code>comments</code></td>
<td align="left">开启文章的评论功能</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>tags</code></td>
<td align="left">标签（不适用于分页）</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>categories</code></td>
<td align="left">分类（不适用于分页）</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>permalink</code></td>
<td align="left">覆盖文章wang址</td>
<td align="left"></td>
</tr>
</tbody></table>
<h4 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h4><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p>
<pre class="line-numbers language-none"><code class="language-none">categories:- Diarytags:- PS3- Games<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<blockquote>
<p>分类方法的分歧</p>
<p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p>
<pre class="line-numbers language-none"><code class="language-none">categories:  - Diary  - Life<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p>
<p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p>
<pre class="line-numbers language-none"><code class="language-none">categories:- [Diary, PlayStation]- [Diary, Games]- [Life]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p>
</blockquote>
<h4 id="JSON-Front-matter"><a href="#JSON-Front-matter" class="headerlink" title="JSON Front-matter"></a>JSON Front-matter</h4><p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p>
<pre class="line-numbers language-none"><code class="language-none">&quot;title&quot;: &quot;Hello World&quot;,
&quot;date&quot;: &quot;2013&#x2F;7&#x2F;13 20:46:25&quot;
;;;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>


<h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><h4 id="hexo-server"><a href="#hexo-server" class="headerlink" title="hexo-server"></a><a href="https://github.com/hexojs/hexo-server">hexo-server</a></h4><p>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 <a href="https://github.com/hexojs/hexo-server">hexo-server</a> 才能使用。</p>
<pre class="line-numbers language-none"><code class="language-none">$ npm install hexo-server --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>安装完成后，输入以下命令以启动服务器，您的网站会在 <code>http://localhost:4000</code> 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>如果您想要更改端口，或是在执行时遇到了 <code>EADDRINUSE</code> 错误，可以在执行时使用 <code>-p</code> 选项指定其他端口，如下：</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo server -p 5000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="静态模式"><a href="#静态模式" class="headerlink" title="静态模式"></a>静态模式</h4><p>在静态模式下，服务器只处理 <code>public</code> 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 <code>hexo generate</code>，此模式通常用于生产环境（production mode）下。</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo server -s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="自定义-IP"><a href="#自定义-IP" class="headerlink" title="自定义 IP"></a>自定义 IP</h4><p>服务器默认运行在 <code>0.0.0.0</code>，您可以覆盖默认的 IP 设置，如下：</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo server -i 192.168.1.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>指定这个参数后，您就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的<code>127.0.0.1</code>外，通常还有一个<code>192.168.*.*</code>的局域网IP，如果像上面那样使用<code>-i</code>参数，就不能用<code>127.0.0.1</code>来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为<code>-i</code>参数的值，那么就无法通过公网来访问站点。</p>
<h4 id="Pow"><a href="#Pow" class="headerlink" title="Pow"></a>Pow</h4><p><a href="http://pow.cx/">Pow</a> 是一个 Mac 系统上的零配置 Rack 服务器，它也可以作为一个简单易用的静态文件服务器来使用。</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-none"><code class="language-none">$ curl get.pow.cx | sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><p>在 <code>~/.pow</code> 文件夹建立链接（symlink）。</p>
<pre class="line-numbers language-none"><code class="language-none">$ cd ~&#x2F;.pow$ ln -s &#x2F;path&#x2F;to&#x2F;myapp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>您的网站将会在 <code>http://myapp.dev</code> 下运行，网址根据链接名称而定。</p>
<h3 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h3><p>使用 Hexo 生成静态文件快速而且简单。</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h4><p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo generate --watch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h4><p>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p>
<pre class="line-numbers language-none"><code class="language-none">$ hexo generate --deploy$ hexo deploy --generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<blockquote>
<p>简写</p>
<p>上面两个命令可以简写为<br>$ hexo g -d<br>$ hexo d -g</p>
</blockquote>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript | 实用工具类</title>
    <url>/2018/11/10/JavaScript-%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<h1 id="项目应用-javaScript-封装工具类"><a href="#项目应用-javaScript-封装工具类" class="headerlink" title="项目应用-javaScript-封装工具类"></a>项目应用-javaScript-封装工具类</h1><h3 id="数字转字符"><a href="#数字转字符" class="headerlink" title="数字转字符"></a>数字转字符</h3><pre class="line-numbers language-none"><code class="language-none">export function formatNumber(n) &#123;
    const str &#x3D; n.toString()
    return str[1] ? str : &#96;0$&#123;str&#125;&#96;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="判断是否包含特殊符号-含有特殊字符包括空格返回-true"><a href="#判断是否包含特殊符号-含有特殊字符包括空格返回-true" class="headerlink" title="判断是否包含特殊符号 含有特殊字符包括空格返回 true"></a>判断是否包含特殊符号 含有特殊字符包括空格返回 true</h3><pre class="line-numbers language-none"><code class="language-none">export function isCharacters(val) &#123;
    if (val.match(&#x2F;^[a-zA-Z0-9\u4e00-\u9fa5]+$&#x2F;g)) &#123;
        return false;
    &#125; else &#123;
        return true
    &#125;

&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="判断是否包含表情"><a href="#判断是否包含表情" class="headerlink" title="判断是否包含表情"></a>判断是否包含表情</h3><pre class="line-numbers language-none"><code class="language-none">export function isEmoji(substring) &#123;
    for (var i &#x3D; 0; i &lt; substring.length; i++) &#123;
        var hs &#x3D; substring.charCodeAt(i);
        if (0xd800 &lt;&#x3D; hs &amp;&amp; hs &lt;&#x3D; 0xdbff) &#123;
            if (substring.length &gt; 1) &#123;
                var ls &#x3D; substring.charCodeAt(i + 1);
                var uc &#x3D; ((hs - 0xd800) * 0x400) + (ls - 0xdc00) + 0x10000;
                if (0x1d000 &lt;&#x3D; uc &amp;&amp; uc &lt;&#x3D; 0x1f77f) &#123;
                    return true;
                &#125;
            &#125;
        &#125; else if (substring.length &gt; 1) &#123;
            var ls &#x3D; substring.charCodeAt(i + 1);
            if (ls &#x3D;&#x3D; 0x20e3) &#123;
                return true;
            &#125;
        &#125; else &#123;
            if (0x2100 &lt;&#x3D; hs &amp;&amp; hs &lt;&#x3D; 0x27ff) &#123;
                return true;
            &#125; else if (0x2B05 &lt;&#x3D; hs &amp;&amp; hs &lt;&#x3D; 0x2b07) &#123;
                return true;
            &#125; else if (0x2934 &lt;&#x3D; hs &amp;&amp; hs &lt;&#x3D; 0x2935) &#123;
                return true;
            &#125; else if (0x3297 &lt;&#x3D; hs &amp;&amp; hs &lt;&#x3D; 0x3299) &#123;
                return true;
            &#125; else if (hs &#x3D;&#x3D; 0xa9 || hs &#x3D;&#x3D; 0xae || hs &#x3D;&#x3D; 0x303d || hs &#x3D;&#x3D; 0x3030 ||
                hs &#x3D;&#x3D; 0x2b55 || hs &#x3D;&#x3D; 0x2b1c || hs &#x3D;&#x3D; 0x2b1b ||
                hs &#x3D;&#x3D; 0x2b50) &#123;
                return true;
            &#125;
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="判断手机号是否正确"><a href="#判断手机号是否正确" class="headerlink" title="判断手机号是否正确"></a>判断手机号是否正确</h3><pre class="line-numbers language-none"><code class="language-none">export function testPhone(phone) &#123;
    let phoneReg &#x3D; &#x2F;(^1[3|4|5|6|7|8|9]\d&#123;9&#125;$)|(^09\d&#123;8&#125;$)&#x2F;;
    return phoneReg.test(phone);
&#125;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="判断邮箱"><a href="#判断邮箱" class="headerlink" title="判断邮箱"></a>判断邮箱</h3><pre class="line-numbers language-none"><code class="language-none">export function testEmail(email) &#123;
    var reg &#x3D; new RegExp(&quot;^[a-z0-9]+([._\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.)&#123;1,63&#125;[a-z0-9]+$&quot;);
    return reg.test(email);
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="判断身份证"><a href="#判断身份证" class="headerlink" title="判断身份证"></a>判断身份证</h3><pre class="line-numbers language-none"><code class="language-none">export function idCardCheck(idNo) &#123;
    var regIdNo &#x3D; &#x2F;(^\d&#123;15&#125;$)|(^\d&#123;18&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)&#x2F;;
    if (!regIdNo.test(idNo)) &#123;
        return false;
    &#125; else &#123;
        return true;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="两个数组求差"><a href="#两个数组求差" class="headerlink" title="两个数组求差"></a>两个数组求差</h3><pre class="line-numbers language-none"><code class="language-none">export function diff(arr1, arr2) &#123;
    var newArr &#x3D; [];
    var arr3 &#x3D; [];
    for (var i &#x3D; 0; i &lt; arr1.length; i++) &#123;
        if (arr2.indexOf(arr1[i]) &#x3D;&#x3D;&#x3D; -1)
            arr3.push(arr1[i]);
    &#125;
    var arr4 &#x3D; [];
    for (var j &#x3D; 0; j &lt; arr2.length; j++) &#123;
        if (arr1.indexOf(arr2[j]) &#x3D;&#x3D;&#x3D; -1)
            arr4.push(arr2[j]);
    &#125;
    newArr &#x3D; arr3.concat(arr4);
    return newArr;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="计算评分（多少星星）"><a href="#计算评分（多少星星）" class="headerlink" title="计算评分（多少星星）"></a>计算评分（多少星星）</h3><pre class="line-numbers language-none"><code class="language-none">export function starNum(num) &#123;
    let fill &#x3D; [];
    let half &#x3D; [];
    let empty &#x3D; [];

    let fillNum &#x3D; parseInt(num);
    let halfNum &#x3D; 0;
    if (num % 1) halfNum &#x3D; 1;
    let emptyNum &#x3D; 5 - fillNum - halfNum;

    for (let i &#x3D; 0; i &lt; fillNum; i++) &#123;
        fill.push(1);
    &#125;
    for (let i &#x3D; 0; i &lt; halfNum; i++) &#123;
        half.push(1);
    &#125;
    for (let i &#x3D; 0; i &lt; emptyNum; i++) &#123;
        empty.push(1);
    &#125;

    let obj &#x3D; &#123;
        fill: fill,
        half: half,
        empty: empty
    &#125;
    return obj;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="根据经纬度计算两地之差"><a href="#根据经纬度计算两地之差" class="headerlink" title="根据经纬度计算两地之差"></a>根据经纬度计算两地之差</h3><pre class="line-numbers language-none"><code class="language-none">export function distance(la1, lo1, la2, lo2) &#123;
    var La1 &#x3D; la1 * Math.PI &#x2F; 180.0;
    var La2 &#x3D; la2 * Math.PI &#x2F; 180.0;
    var La3 &#x3D; La1 - La2;
    var Lb3 &#x3D; lo1 * Math.PI &#x2F; 180.0 - lo2 * Math.PI &#x2F; 180.0;
    var s &#x3D; 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(La3 &#x2F; 2), 2) + Math.cos(La1) * Math.cos(La2) * Math.pow(Math.sin(Lb3 &#x2F; 2), 2)));
    s &#x3D; s * 6378.137;
    s &#x3D; Math.round(s * 10000) &#x2F; 10000;
    s &#x3D; s.toFixed(2);
    return s;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="判断环境（web-view）"><a href="#判断环境（web-view）" class="headerlink" title="判断环境（web-view）"></a>判断环境（web-view）</h3><pre class="line-numbers language-none"><code class="language-none">export function isMiniProgram() &#123;
    var ua &#x3D; navigator.userAgent.toLowerCase()
    var envType &#x3D; &#39;#&#39;

    if (ua.match(&#x2F;MicroMessenge&#x2F;i) &#x3D;&#x3D; &#39;micromessenger&#39;) &#123;
        wx.miniProgram.getEnv(function(res) &#123;
            if (res.miniProgram) &#123; &#x2F;&#x2F; 小程序环境下逻辑
                envType &#x3D; true
            &#125; else &#123; &#x2F;&#x2F; 非小程序环境下逻辑
                envType &#x3D; false
            &#125;
        &#125;)
    &#125; else &#123; &#x2F;&#x2F; 非微信环境逻辑
        envType &#x3D; false
    &#125;
    return envType
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h3><pre class="line-numbers language-none"><code class="language-none">export function unique(arr) &#123;
    var res &#x3D; [];
    var json &#x3D; &#123;&#125;;
    for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;
        if (!json[arr[i]]) &#123;
            res.push(arr[i]);
            json[arr[i]] &#x3D; 1;
        &#125;
    &#125;
    return res;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="格式时间"><a href="#格式时间" class="headerlink" title="格式时间"></a>格式时间</h3><pre class="line-numbers language-none"><code class="language-none">export function formatDate() &#123;
    Date.prototype.pattern &#x3D; function(fmt) &#123;
        var o &#x3D; &#123;
            &quot;M+&quot;: this.getMonth() + 1, &#x2F;&#x2F;月份
            &quot;d+&quot;: this.getDate(), &#x2F;&#x2F;日
            &quot;h+&quot;: this.getHours() % 12 &#x3D;&#x3D; 0 ? 12 : this.getHours() % 12, &#x2F;&#x2F;小时
            &quot;H+&quot;: this.getHours(), &#x2F;&#x2F;小时
            &quot;m+&quot;: this.getMinutes(), &#x2F;&#x2F;分
            &quot;s+&quot;: this.getSeconds(), &#x2F;&#x2F;秒
            &quot;q+&quot;: Math.floor((this.getMonth() + 3) &#x2F; 3), &#x2F;&#x2F;季度
            S: this.getMilliseconds() &#x2F;&#x2F;毫秒
        &#125;;
        var week &#x3D; &#123;
            &quot;0&quot;: &quot;&#x2F;u65e5&quot;,
            &quot;1&quot;: &quot;&#x2F;u4e00&quot;,
            &quot;2&quot;: &quot;&#x2F;u4e8c&quot;,
            &quot;3&quot;: &quot;&#x2F;u4e09&quot;,
            &quot;4&quot;: &quot;&#x2F;u56db&quot;,
            &quot;5&quot;: &quot;&#x2F;u4e94&quot;,
            &quot;6&quot;: &quot;&#x2F;u516d&quot;
        &#125;;
        if (&#x2F;(y+)&#x2F;.test(fmt)) &#123;
            fmt &#x3D; fmt.replace(
                RegExp.$1,
                (this.getFullYear() + &quot;&quot;).substr(4 - RegExp.$1.length)
            );
        &#125;
        if (&#x2F;(E+)&#x2F;.test(fmt)) &#123;
            fmt &#x3D; fmt.replace(
                RegExp.$1,
                (RegExp.$1.length &gt; 1 ?
                    RegExp.$1.length &gt; 2 ?
                    &quot;&#x2F;u661f&#x2F;u671f&quot; :
                    &quot;&#x2F;u5468&quot; :
                    &quot;&quot;) + week[this.getDay() + &quot;&quot;]
            );
        &#125;
        for (var k in o) &#123;
            if (new RegExp(&quot;(&quot; + k + &quot;)&quot;).test(fmt)) &#123;
                fmt &#x3D; fmt.replace(
                    RegExp.$1,
                    RegExp.$1.length &#x3D;&#x3D; 1 ?
                    o[k] :
                    (&quot;00&quot; + o[k]).substr((&quot;&quot; + o[k]).length)
                );
            &#125;
        &#125;
        return fmt;
    &#125;;

    &#x2F;&#x2F; let date &#x3D; new Date();
    &#x2F;&#x2F; window.alert(date.pattern(&quot;yyyy-MM-dd hh:mm:ss&quot;));
&#125;;

export function formatTime(now) &#123;
    var year &#x3D; now.getFullYear();
    var month &#x3D; now.getMonth() + 1;
    var date &#x3D; now.getDate();
    var hour &#x3D; now.getHours();
    var minute &#x3D; now.getMinutes();
    var second &#x3D; now.getSeconds();
    return year + &quot;-&quot; + (month &gt;&#x3D; 10 ? month : &#39;0&#39; + month) + &quot;-&quot; + (date &gt;&#x3D; 10 ? date : &#39;0&#39; + date) +
        &quot; &quot; + (hour &gt;&#x3D; 10 ? hour : &#39;0&#39; + hour) + &quot;:&quot; + (minute &gt;&#x3D; 10 ? minute : &#39;0&#39; + minute) + &quot;:&quot; + (second &gt;&#x3D; 10 ? second : &#39;0&#39; + second);
&#125;

export function formatTimeTwo(number, format) &#123;

    var formateArr &#x3D; [&#39;Y&#39;, &#39;M&#39;, &#39;D&#39;, &#39;h&#39;, &#39;m&#39;, &#39;s&#39;];
    var returnArr &#x3D; [];

    var date &#x3D; new Date(number);
    returnArr.push(date.getFullYear());
    returnArr.push(formatNumber(date.getMonth() + 1));
    returnArr.push(formatNumber(date.getDate()));

    returnArr.push(formatNumber(date.getHours()));
    returnArr.push(formatNumber(date.getMinutes()));
    returnArr.push(formatNumber(date.getSeconds()));

    for (var i in returnArr) &#123;
        format &#x3D; format.replace(formateArr[i], returnArr[i]);
    &#125;
    return format;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
</search>
